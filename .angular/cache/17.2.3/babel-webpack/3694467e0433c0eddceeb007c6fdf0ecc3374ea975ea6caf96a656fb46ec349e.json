{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction CartComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport let CartComponent = /*#__PURE__*/(() => {\n  class CartComponent {\n    constructor(cartService, formBuilder) {\n      this.cartService = cartService;\n      this.formBuilder = formBuilder;\n      this.items = this.cartService.getItems();\n      this.checkoutForm = this.formBuilder.group({\n        name: '',\n        address: ''\n      });\n    }\n    onSubmit() {\n      //process checkout data here\n      this.items = this.cartService.clearCart();\n      console.warn('Your order has been submitted', this.checkoutForm.value);\n      this.checkoutForm.reset();\n    }\n    static #_ = this.ɵfac = function CartComponent_Factory(t) {\n      return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CartComponent,\n      selectors: [[\"app-cart\"]],\n      decls: 17,\n      vars: 2,\n      consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"cart-item\"]],\n      template: function CartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Cart\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"p\")(3, \"a\", 0);\n          i0.ɵɵtext(4, \"Shipping Prices\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, CartComponent_div_5_Template, 6, 4, \"div\", 1);\n          i0.ɵɵelementStart(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function CartComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit;\n          });\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n          i0.ɵɵtext(13, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 7);\n          i0.ɵɵtext(16, \"Purchase\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n        }\n      },\n      dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.RouterLink, i3.CurrencyPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return CartComponent;\n})();","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","name","ɵɵpipeBind1","price","CartComponent","constructor","cartService","formBuilder","items","getItems","checkoutForm","group","address","onSubmit","clearCart","console","warn","value","reset","_","ɵɵdirectiveInject","i1","CartService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","CartComponent_Template","rf","ctx","ɵɵtemplate","CartComponent_div_5_Template","ɵɵlistener","CartComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵproperty"],"sources":["C:\\Projects\\AngularTotorialApp\\src\\app\\cart\\cart.component.ts","C:\\Projects\\AngularTotorialApp\\src\\app\\cart\\cart.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CartService } from '../cart.service';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrl: './cart.component.css'\r\n})\r\nexport class CartComponent {\r\n\r\n  items = this.cartService.getItems();\r\n\r\n  checkoutForm = this.formBuilder.group({\r\n    name: '',\r\n    address: ''\r\n  })\r\n\r\n  constructor(\r\n    private cartService: CartService,\r\n    private formBuilder: FormBuilder,\r\n  ) { }\r\n\r\n  onSubmit(): void{\r\n    //process checkout data here\r\n    this.items = this.cartService.clearCart();\r\n    console.warn('Your order has been submitted', this.checkoutForm.value);\r\n    this.checkoutForm.reset();\r\n  }\r\n}","<h3>Cart</h3>\r\n\r\n<p>\r\n  <a routerLink=\"/shipping\">Shipping Prices</a>\r\n</p>\r\n\r\n<div class=\"cart-item\" *ngFor=\"let item of items\">\r\n  <span>{{ item.name }}</span>\r\n  <span>{{ item.price | currency }}</span>\r\n</div>\r\n\r\n\r\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit\">\r\n\r\n  <div>\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" id=\"name\" formControlName=\"name\">\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"address\">Address</label>\r\n    <input type=\"text\" id=\"address\" formControlName=\"address\">\r\n  </div>\r\n\r\n<button class=\"button\" type=\"submit\">Purchase</button>\r\n\r\n</form>"],"mappings":";;;;;;;ICMAA,EAAA,CAAAC,cAAA,aAAkD;IAC1CD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAC5BH,EAAA,CAAAC,cAAA,WAAM;IAAAD,EAAA,CAAAE,MAAA,GAA2B;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IADlCH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,IAAA,CAAe;IACfP,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAQ,WAAA,OAAAF,OAAA,CAAAG,KAAA,EAA2B;;;ADCnC,WAAaC,aAAa;EAApB,MAAOA,aAAa;IASxBC,YACUC,WAAwB,EACxBC,WAAwB;MADxB,KAAAD,WAAW,GAAXA,WAAW;MACX,KAAAC,WAAW,GAAXA,WAAW;MATrB,KAAAC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;MAEnC,KAAAC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;QACpCV,IAAI,EAAE,EAAE;QACRW,OAAO,EAAE;OACV,CAAC;IAKE;IAEJC,QAAQA,CAAA;MACN;MACA,IAAI,CAACL,KAAK,GAAG,IAAI,CAACF,WAAW,CAACQ,SAAS,EAAE;MACzCC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACN,YAAY,CAACO,KAAK,CAAC;MACtE,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;IAC3B;IAAC,QAAAC,CAAA,G;uBAnBUf,aAAa,EAAAV,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA5B,EAAA,CAAA0B,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;IAAA,QAAAC,EAAA,G;YAAbrB,aAAa;MAAAsB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT1BtC,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAEbH,EAAA,CAAAC,cAAA,QAAG;UACyBD,EAAA,CAAAE,MAAA,sBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAG/CH,EAAA,CAAAwC,UAAA,IAAAC,4BAAA,iBAGM;UAGNzC,EAAA,CAAAC,cAAA,cAAuD;UAAtBD,EAAA,CAAA0C,UAAA,sBAAAC,gDAAA;YAAA,OAAAJ,GAAA,CAAApB,QAAA;UAAA,EAAqB;UAEpDnB,EAAA,CAAAC,cAAA,UAAK;UACeD,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC9BH,EAAA,CAAA4C,SAAA,gBAAoD;UACtD5C,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,WAAK;UACkBD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACpCH,EAAA,CAAA4C,SAAA,gBAA0D;UAC5D5C,EAAA,CAAAG,YAAA,EAAM;UAERH,EAAA,CAAAC,cAAA,iBAAqC;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;UAlBdH,EAAA,CAAAI,SAAA,GAAQ;UAARJ,EAAA,CAAA6C,UAAA,YAAAN,GAAA,CAAAzB,KAAA,CAAQ;UAM1Cd,EAAA,CAAAI,SAAA,EAA0B;UAA1BJ,EAAA,CAAA6C,UAAA,cAAAN,GAAA,CAAAvB,YAAA,CAA0B;;;;;;;SDHnBN,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}